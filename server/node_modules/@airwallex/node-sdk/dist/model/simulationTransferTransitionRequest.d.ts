export interface SimulationTransferTransitionRequest {
    failure_type?: SimulationTransferTransitionRequest.FailureTypeEnum;
    next_status: string;
}
export declare namespace SimulationTransferTransitionRequest {
    const validFailureTypeEnum: readonly ["ACCOUNT_CLOSED", "ACCOUNT_CURRENCY_MISMATCH", "ACCOUNT_INACTIVE_OR_DORMANT", "ACCOUNT_UNDER_RESTRICTION", "BENEFICIARY_BANK_RETURNED", "BENEFICIARY_NAME_MISMATCH", "BENEFICIARY_REQUESTED", "CARD_ISSUER_ERROR", "CHANNEL_POLICY", "CHANNEL_TIMEOUT", "CLIENT_REQUESTED", "DUPLICATION_RETURN", "EXCEEDED_TRANSACTION_AMOUNT_OR_LIMIT", "INBOUND_2B_CARD_NOT_SUPPORTED", "INBOUND_BENFICIARY_VALIDATION_ERROR", "INBOUND_COMPANY_REGISTRATION_NUMBER_ERROR", "INBOUND_ORDER_ERROR", "INSUFFICIENT_FUNDS", "INVALID_ACCOUNT_NAME_OR_NUMBER", "INVALID_BANK_INFORMATION", "INVALID_BANK_OR_BRANCH_CODE", "INVALID_BENEFICIARY_DETAILS", "INVALID_CORRESPONDENT_BANK_INFORMATION", "INVALID_PAYMENT_PURPOSE", "INVALID_SPECIAL_CHARACTER", "INVALID_SWIFT_BIC_CODE", "OTHER", "RECALL_REQUESTED", "SYSTEM_ERROR", "TM_SUSPENDED", "TRANSACTION_AMOUNT_NOT_COVERING_FEE", "UNABLE_TO_APPLY"];
    type FailureTypeEnum = (typeof validFailureTypeEnum)[number] | 'UNKNOWN';
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=simulationTransferTransitionRequest.d.ts.map