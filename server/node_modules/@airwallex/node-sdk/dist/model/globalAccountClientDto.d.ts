import { AlternateAccountIdentifiersDto } from './alternateAccountIdentifiersDto';
import { ClientInstitution } from './clientInstitution';
import { GlobalAccountRequiredFeature } from './globalAccountRequiredFeature';
import { GlobalAccountSupportedFeature } from './globalAccountSupportedFeature';
export interface GlobalAccountClientDto {
    account_name: string;
    account_number?: string;
    account_type?: GlobalAccountClientDto.AccountTypeEnum;
    alternate_account_identifiers?: AlternateAccountIdentifiersDto;
    close_reason?: string;
    country_code: string;
    deposit_conversion_currency?: string;
    failure_reason?: string;
    iban?: string;
    id: string;
    institution: ClientInstitution;
    nick_name?: string;
    request_id?: string;
    required_features: Array<GlobalAccountRequiredFeature>;
    status: GlobalAccountClientDto.StatusEnum;
    supported_features: Array<GlobalAccountSupportedFeature>;
    swift_code?: string;
}
export declare namespace GlobalAccountClientDto {
    const validAccountTypeEnum: readonly ["Checking", "Saving", "Current"];
    type AccountTypeEnum = (typeof validAccountTypeEnum)[number] | 'UNKNOWN';
    const validStatusEnum: readonly ["ACTIVE", "CLOSED", "PROCESSING", "FAILED"];
    type StatusEnum = (typeof validStatusEnum)[number] | 'UNKNOWN';
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=globalAccountClientDto.d.ts.map