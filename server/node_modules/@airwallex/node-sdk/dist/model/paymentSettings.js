"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentSettings = void 0;
var PaymentSettings;
(function (PaymentSettings) {
    PaymentSettings.validAddressValidationModeEnum = ['ALLOW_COMPONENTS_ONLY', 'ALLOW_FULL_OR_COMPONENTS'];
    PaymentSettings.validChannelStatusPropagationStrategyEnum = ['DEFAULT', 'IGNORE_DISPATCHED'];
    PaymentSettings.validPaymentRetryFeeModeEnum = ['PRE_PAID', 'POST_PAID', 'IGNORE'];
    PaymentSettings.validPaymentReturnModeEnum = ['PASS_THROUGH', 'CHARGE_FEE'];
    PaymentSettings.validPaymentReturnToEnum = ['TO_SOURCE_CURRENCY', 'TO_TARGET_CURRENCY'];
    PaymentSettings.discriminator = 'PaymentSettings';
    PaymentSettings.attributeTypeMap = [
        {
            name: 'additional_swift_charges',
            baseName: 'additional_swift_charges',
            type: 'Array<AdditionalSwiftCharge>',
        },
        {
            name: 'address_validation_mode',
            baseName: 'address_validation_mode',
            type: 'PaymentSettings.AddressValidationModeEnum',
        },
        {
            name: 'bank_account_validation_levels',
            baseName: 'bank_account_validation_levels',
            type: '{ [key: string]: string; }',
        },
        {
            name: 'channel_status_propagation_strategy',
            baseName: 'channel_status_propagation_strategy',
            type: 'PaymentSettings.ChannelStatusPropagationStrategyEnum',
        },
        {
            name: 'charge_fee_delay_settlement_days',
            baseName: 'charge_fee_delay_settlement_days',
            type: 'number',
        },
        {
            name: 'enable_beneficiary_fingerprint',
            baseName: 'enable_beneficiary_fingerprint',
            type: 'boolean',
        },
        {
            name: 'fee_schedule',
            baseName: 'fee_schedule',
            type: 'Array<PaymentFee>',
        },
        {
            name: 'iban_account_number_detection',
            baseName: 'iban_account_number_detection',
            type: 'string',
        },
        {
            name: 'on_demand_funding',
            baseName: 'on_demand_funding',
            type: 'boolean',
        },
        {
            name: 'payment_auto_dispatched',
            baseName: 'payment_auto_dispatched',
            type: 'PaymentAutoDispatched',
        },
        {
            name: 'payment_limit',
            baseName: 'payment_limit',
            type: 'PaymentLimit',
        },
        {
            name: 'payment_priority',
            baseName: 'payment_priority',
            type: 'number',
        },
        {
            name: 'payment_retry_fee_mode',
            baseName: 'payment_retry_fee_mode',
            type: 'PaymentSettings.PaymentRetryFeeModeEnum',
        },
        {
            name: 'payment_return_mode',
            baseName: 'payment_return_mode',
            type: 'PaymentSettings.PaymentReturnModeEnum',
        },
        {
            name: 'payment_return_to',
            baseName: 'payment_return_to',
            type: 'PaymentSettings.PaymentReturnToEnum',
        },
        {
            name: 'refund_flow',
            baseName: 'refund_flow',
            type: 'string',
        },
        {
            name: 'waive_fxdelta_fee',
            baseName: 'waive_fxdelta_fee',
            type: 'boolean',
        },
    ];
})(PaymentSettings || (exports.PaymentSettings = PaymentSettings = {}));
//# sourceMappingURL=paymentSettings.js.map