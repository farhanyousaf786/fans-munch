import { SimulationMerchantDto } from './simulationMerchantDto';
export interface SimulationTransactionDTO {
    auth_code?: string;
    billing_amount?: number;
    billing_currency?: string;
    card_id?: string;
    card_nickname?: string;
    client_data?: string;
    failure_reason?: SimulationTransactionDTO.FailureReasonEnum;
    masked_card_number?: string;
    merchant?: SimulationMerchantDto;
    network_transaction_id?: string;
    posted_date?: Date;
    retrieval_ref?: string;
    status?: string;
    transaction_amount?: number;
    transaction_currency?: string;
    transaction_date?: Date;
    transaction_id?: string;
    transaction_type?: string;
}
export declare namespace SimulationTransactionDTO {
    const validFailureReasonEnum: readonly ["ACCOUNT_INVALID", "CARDHOLDER_VERIFICATION_FAILED", "CARD_INVALID", "CURRENCY_NOT_ALLOWED", "CVV_INVALID", "INSUFFICIENT_FUNDS", "INTERNAL_ERROR", "INVALID_EXPIRY_DATE", "LIMIT_EXCEEDED", "MERCHANT_CATEGORY_NOT_ALLOWED", "NOT_SUPPORTED", "PIN_INVALID", "PIN_RETRIES_EXCEEDED", "REMOTE_AUTH_DECLINED", "TRANSACTION_BLOCKED"];
    type FailureReasonEnum = (typeof validFailureReasonEnum)[number] | 'UNKNOWN';
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=simulationTransactionDTO.d.ts.map