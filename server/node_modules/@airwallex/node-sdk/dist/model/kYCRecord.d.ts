import { FailedReason } from './failedReason';
import { KycReturnReviewRecord } from './kycReturnReviewRecord';
import { PeriodicalReviewRecord } from './periodicalReviewRecord';
export interface KYCRecord {
    date?: Date;
    expected_periodical_review_date?: Date;
    failed_reasons?: Array<FailedReason>;
    kyc_passed_date?: Date;
    kyc_process_status?: KYCRecord.KycProcessStatusEnum;
    kyc_return_review_record?: KycReturnReviewRecord;
    kyc_reviewed_records?: Array<PeriodicalReviewRecord>;
    last_reviewed?: Date;
    note_internal?: string;
    note_to_user?: string;
    receive_time?: Date;
    status: KYCRecord.StatusEnum;
}
export declare namespace KYCRecord {
    const validKycProcessStatusEnum: readonly ["INIT", "KYC", "COMPLIANCE", "SUCCESS", "FAILURE"];
    type KycProcessStatusEnum = (typeof validKycProcessStatusEnum)[number] | 'UNKNOWN';
    const validStatusEnum: readonly ["INIT", "EDITING", "SUBMITTED", "SUCCESS", "FAILURE"];
    type StatusEnum = (typeof validStatusEnum)[number] | 'UNKNOWN';
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=kYCRecord.d.ts.map