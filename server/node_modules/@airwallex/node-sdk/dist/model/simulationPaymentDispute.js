"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SimulationPaymentDispute = void 0;
var SimulationPaymentDispute;
(function (SimulationPaymentDispute) {
    SimulationPaymentDispute.discriminator = 'SimulationPaymentDispute';
    SimulationPaymentDispute.attributeTypeMap = [
        {
            name: 'accept_details',
            baseName: 'accept_details',
            type: 'Array<SimulationAcceptDetails>',
        },
        {
            name: 'acquirer_reference_number',
            baseName: 'acquirer_reference_number',
            type: 'string',
        },
        {
            name: 'amount',
            baseName: 'amount',
            type: 'number',
        },
        {
            name: 'card_brand',
            baseName: 'card_brand',
            type: 'string',
        },
        {
            name: 'challenge_details',
            baseName: 'challenge_details',
            type: 'Array<SimulationChallengeDetails>',
        },
        {
            name: 'created_at',
            baseName: 'created_at',
            type: 'Date',
        },
        {
            name: 'currency',
            baseName: 'currency',
            type: 'string',
        },
        {
            name: 'customer_id',
            baseName: 'customer_id',
            type: 'string',
        },
        {
            name: 'customer_name',
            baseName: 'customer_name',
            type: 'string',
        },
        {
            name: 'due_at',
            baseName: 'due_at',
            type: 'Date',
        },
        {
            name: 'id',
            baseName: 'id',
            type: 'string',
        },
        {
            name: 'issuer_comment',
            baseName: 'issuer_comment',
            type: 'string',
        },
        {
            name: 'issuer_documents',
            baseName: 'issuer_documents',
            type: 'Array<string>',
        },
        {
            name: 'merchant_order_id',
            baseName: 'merchant_order_id',
            type: 'string',
        },
        {
            name: 'mode',
            baseName: 'mode',
            type: 'string',
        },
        {
            name: 'payment_attempt_id',
            baseName: 'payment_attempt_id',
            type: 'string',
        },
        {
            name: 'payment_intent_id',
            baseName: 'payment_intent_id',
            type: 'string',
        },
        {
            name: 'payment_method_type',
            baseName: 'payment_method_type',
            type: 'string',
        },
        {
            name: 'reason',
            baseName: 'reason',
            type: 'SimulationReasonDetails',
        },
        {
            name: 'refunds',
            baseName: 'refunds',
            type: 'Array<SimulationRefundDetails>',
        },
        {
            name: 'stage',
            baseName: 'stage',
            type: 'string',
        },
        {
            name: 'status',
            baseName: 'status',
            type: 'string',
        },
        {
            name: 'transaction_type',
            baseName: 'transaction_type',
            type: 'string',
        },
        {
            name: 'updated_at',
            baseName: 'updated_at',
            type: 'Date',
        },
    ];
})(SimulationPaymentDispute || (exports.SimulationPaymentDispute = SimulationPaymentDispute = {}));
//# sourceMappingURL=simulationPaymentDispute.js.map