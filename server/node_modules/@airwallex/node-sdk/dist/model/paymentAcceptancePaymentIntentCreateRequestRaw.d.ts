import { PaymentAcceptanceAdditionalInfoCreate } from './paymentAcceptanceAdditionalInfoCreate';
import { PaymentAcceptanceCustomerDetails } from './paymentAcceptanceCustomerDetails';
import { PaymentAcceptanceDeviceData } from './paymentAcceptanceDeviceData';
import { PaymentAcceptanceExternalRecurringData } from './paymentAcceptanceExternalRecurringData';
import { PaymentAcceptanceFundsSplitDataRaw } from './paymentAcceptanceFundsSplitDataRaw';
import { PaymentAcceptancePaymentConsentOptionsRequest } from './paymentAcceptancePaymentConsentOptionsRequest';
import { PaymentAcceptancePaymentMethodOptionsForCreate } from './paymentAcceptancePaymentMethodOptionsForCreate';
import { PaymentAcceptancePaymentMethodRequestForIntentCreation } from './paymentAcceptancePaymentMethodRequestForIntentCreation';
import { PaymentAcceptancePurchaseOrderCreate } from './paymentAcceptancePurchaseOrderCreate';
import { PaymentAcceptanceRiskControlOptions } from './paymentAcceptanceRiskControlOptions';
export interface PaymentAcceptancePaymentIntentCreateRequestRaw {
    additional_info?: PaymentAcceptanceAdditionalInfoCreate;
    amount: number;
    connected_account_id?: string;
    currency: string;
    customer?: PaymentAcceptanceCustomerDetails;
    customer_id?: string;
    descriptor?: string;
    device_data?: PaymentAcceptanceDeviceData;
    external_recurring_data?: PaymentAcceptanceExternalRecurringData;
    funds_split_data?: Array<PaymentAcceptanceFundsSplitDataRaw>;
    merchant_order_id: string;
    metadata?: {
        [key: string]: string;
    };
    order?: PaymentAcceptancePurchaseOrderCreate;
    payment_consent?: PaymentAcceptancePaymentConsentOptionsRequest;
    payment_method?: PaymentAcceptancePaymentMethodRequestForIntentCreation;
    payment_method_options?: PaymentAcceptancePaymentMethodOptionsForCreate;
    request_id: string;
    return_url?: string;
    risk_control_options?: PaymentAcceptanceRiskControlOptions;
}
export declare namespace PaymentAcceptancePaymentIntentCreateRequestRaw {
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=paymentAcceptancePaymentIntentCreateRequestRaw.d.ts.map