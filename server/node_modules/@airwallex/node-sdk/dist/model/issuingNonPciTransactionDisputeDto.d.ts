import { IssuingNonPciDisputeMessage } from './issuingNonPciDisputeMessage';
export interface IssuingNonPciTransactionDisputeDto {
    amount?: number;
    created_at?: string;
    detailed_status?: IssuingNonPciTransactionDisputeDto.DetailedStatusEnum;
    id?: string;
    notes?: string;
    reason?: IssuingNonPciTransactionDisputeDto.ReasonEnum;
    reference?: string;
    status?: IssuingNonPciTransactionDisputeDto.StatusEnum;
    transaction_id?: string;
    update_history?: Array<IssuingNonPciDisputeMessage>;
    updated_at?: string;
    updated_by?: IssuingNonPciTransactionDisputeDto.UpdatedByEnum;
}
export declare namespace IssuingNonPciTransactionDisputeDto {
    const validDetailedStatusEnum: readonly ["DISPUTE_FILED", "PRE_ARB_RECEIVED", "PRE_ARB_DECLINED_BY_ISSUER", "ARBITRATION_RECEIVED", "DISPUTE_DECLINED", "PRE_ARB_DELIVERED", "PRE_ARB_DECLINED_BY_ACQUIRER", "ARB_DELIVERED", "WON", "LOST"];
    type DetailedStatusEnum = (typeof validDetailedStatusEnum)[number] | 'UNKNOWN';
    const validReasonEnum: readonly ["SUSPECTED_FRAUD", "UNAUTHORIZED_TRANSACTION", "DUPLICATED_TRANSACTION", "PAID_BY_OTHER_MEANS", "GOODS_SERVICE_NOT_AS_DESCRIBED", "GOODS_DAMAGED", "GOODS_SERVICE_NOT_RECEIVED", "REFUND_UNPROCESSED", "GOODS_SERVICE_CANCELED", "RECURRING_CANCELED", "OTHER"];
    type ReasonEnum = (typeof validReasonEnum)[number] | 'UNKNOWN';
    const validStatusEnum: readonly ["DRAFT", "EXPIRED", "SUBMITTED", "REJECTED", "CANCELED", "IN_PROGRESS", "WON", "LOST"];
    type StatusEnum = (typeof validStatusEnum)[number] | 'UNKNOWN';
    const validUpdatedByEnum: readonly ["CUSTOMER", "AIRWALLEX"];
    type UpdatedByEnum = (typeof validUpdatedByEnum)[number] | 'UNKNOWN';
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=issuingNonPciTransactionDisputeDto.d.ts.map