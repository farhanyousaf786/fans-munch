"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentAcceptancePaymentIntentSingleResponse = void 0;
var PaymentAcceptancePaymentIntentSingleResponse;
(function (PaymentAcceptancePaymentIntentSingleResponse) {
    PaymentAcceptancePaymentIntentSingleResponse.discriminator = 'PaymentAcceptancePaymentIntentSingleResponse';
    PaymentAcceptancePaymentIntentSingleResponse.attributeTypeMap = [
        {
            name: 'additional_info',
            baseName: 'additional_info',
            type: 'PaymentAcceptanceAdditionalInfo',
        },
        {
            name: 'amount',
            baseName: 'amount',
            type: 'number',
        },
        {
            name: 'cancellation_reason',
            baseName: 'cancellation_reason',
            type: 'string',
        },
        {
            name: 'cancelled_at',
            baseName: 'cancelled_at',
            type: 'Date',
        },
        {
            name: 'captured_amount',
            baseName: 'captured_amount',
            type: 'number',
        },
        {
            name: 'client_secret',
            baseName: 'client_secret',
            type: 'string',
        },
        {
            name: 'connected_account_id',
            baseName: 'connected_account_id',
            type: 'string',
        },
        {
            name: 'created_at',
            baseName: 'created_at',
            type: 'Date',
        },
        {
            name: 'currency',
            baseName: 'currency',
            type: 'string',
        },
        {
            name: 'customer',
            baseName: 'customer',
            type: 'PaymentAcceptanceCustomerDetails',
        },
        {
            name: 'customer_id',
            baseName: 'customer_id',
            type: 'string',
        },
        {
            name: 'descriptor',
            baseName: 'descriptor',
            type: 'string',
        },
        {
            name: 'funds_split_data',
            baseName: 'funds_split_data',
            type: 'Array<PaymentAcceptanceFundsSplitData>',
        },
        {
            name: 'id',
            baseName: 'id',
            type: 'string',
        },
        {
            name: 'invoice_id',
            baseName: 'invoice_id',
            type: 'string',
        },
        {
            name: 'latest_payment_attempt',
            baseName: 'latest_payment_attempt',
            type: 'PaymentAcceptancePaymentAttempt',
        },
        {
            name: 'merchant_order_id',
            baseName: 'merchant_order_id',
            type: 'string',
        },
        {
            name: 'metadata',
            baseName: 'metadata',
            type: '{ [key: string]: string; }',
        },
        {
            name: 'next_action',
            baseName: 'next_action',
            type: 'PaymentAcceptanceNextAction',
        },
        {
            name: 'order',
            baseName: 'order',
            type: 'PaymentAcceptancePurchaseOrder',
        },
        {
            name: 'payment_consent',
            baseName: 'payment_consent',
            type: 'PaymentAcceptancePaymentConsentOptionsResponse',
        },
        {
            name: 'payment_consent_id',
            baseName: 'payment_consent_id',
            type: 'string',
        },
        {
            name: 'payment_link_id',
            baseName: 'payment_link_id',
            type: 'string',
        },
        {
            name: 'payment_method_options',
            baseName: 'payment_method_options',
            type: 'PaymentAcceptancePaymentMethodOptionsForCreate',
        },
        {
            name: 'request_id',
            baseName: 'request_id',
            type: 'string',
        },
        {
            name: 'return_url',
            baseName: 'return_url',
            type: 'string',
        },
        {
            name: 'risk_control_options',
            baseName: 'risk_control_options',
            type: 'PaymentAcceptanceRiskControlOptions',
        },
        {
            name: 'status',
            baseName: 'status',
            type: 'string',
        },
        {
            name: 'updated_at',
            baseName: 'updated_at',
            type: 'Date',
        },
    ];
})(PaymentAcceptancePaymentIntentSingleResponse || (exports.PaymentAcceptancePaymentIntentSingleResponse = PaymentAcceptancePaymentIntentSingleResponse = {}));
//# sourceMappingURL=paymentAcceptancePaymentIntentSingleResponse.js.map