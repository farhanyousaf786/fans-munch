import { SimulationAgreementToTermsAndConditionsRequiredApiDto } from './simulationAgreementToTermsAndConditionsRequiredApiDto';
import { SimulationIdRequirementApiDto } from './simulationIdRequirementApiDto';
import { SimulationOtherRequirementApiDto } from './simulationOtherRequirementApiDto';
import { SimulationPhotoFileRequirementApiDto } from './simulationPhotoFileRequirementApiDto';
import { SimulationPhotoHoldingIdRequiredApiDto } from './simulationPhotoHoldingIdRequiredApiDto';
import { SimulationReasonForDuplicateAccountRequiredApiDto } from './simulationReasonForDuplicateAccountRequiredApiDto';
export interface SimulationAccountRequirementApiDto {
    agreement_to_terms_and_conditions_required?: SimulationAgreementToTermsAndConditionsRequiredApiDto;
    other?: Array<SimulationOtherRequirementApiDto>;
    photo_file_id_required?: SimulationPhotoFileRequirementApiDto;
    photo_holding_id_required?: Array<SimulationPhotoHoldingIdRequiredApiDto>;
    primary_identification_required?: Array<SimulationIdRequirementApiDto>;
    reason_for_duplicate_account_required?: Array<SimulationReasonForDuplicateAccountRequiredApiDto>;
    secondary_identification_required?: Array<SimulationIdRequirementApiDto>;
}
export declare namespace SimulationAccountRequirementApiDto {
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=simulationAccountRequirementApiDto.d.ts.map