import { PaymentAcceptanceAdditionalInfo } from './paymentAcceptanceAdditionalInfo';
import { PaymentAcceptanceCustomerDetails } from './paymentAcceptanceCustomerDetails';
import { PaymentAcceptanceFundsSplitData } from './paymentAcceptanceFundsSplitData';
import { PaymentAcceptanceNextAction } from './paymentAcceptanceNextAction';
import { PaymentAcceptancePaymentAttemptId } from './paymentAcceptancePaymentAttemptId';
import { PaymentAcceptancePaymentConsentOptionsResponse } from './paymentAcceptancePaymentConsentOptionsResponse';
import { PaymentAcceptancePaymentMethodOptionsForCreate } from './paymentAcceptancePaymentMethodOptionsForCreate';
import { PaymentAcceptancePurchaseOrder } from './paymentAcceptancePurchaseOrder';
import { PaymentAcceptanceRiskControlOptions } from './paymentAcceptanceRiskControlOptions';
export interface PaymentAcceptancePaymentIntentListResponse {
    additional_info?: PaymentAcceptanceAdditionalInfo;
    amount?: number;
    cancellation_reason?: string;
    cancelled_at?: Date;
    captured_amount?: number;
    client_secret?: string;
    connected_account_id?: string;
    created_at?: Date;
    currency?: string;
    customer?: PaymentAcceptanceCustomerDetails;
    customer_id?: string;
    descriptor?: string;
    funds_split_data?: Array<PaymentAcceptanceFundsSplitData>;
    id?: string;
    invoice_id?: string;
    latest_payment_attempt?: PaymentAcceptancePaymentAttemptId;
    merchant_order_id?: string;
    metadata?: {
        [key: string]: string;
    };
    next_action?: PaymentAcceptanceNextAction;
    order?: PaymentAcceptancePurchaseOrder;
    payment_consent?: PaymentAcceptancePaymentConsentOptionsResponse;
    payment_consent_id?: string;
    payment_link_id?: string;
    payment_method_options?: PaymentAcceptancePaymentMethodOptionsForCreate;
    request_id?: string;
    return_url?: string;
    risk_control_options?: PaymentAcceptanceRiskControlOptions;
    status?: string;
    updated_at?: Date;
}
export declare namespace PaymentAcceptancePaymentIntentListResponse {
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=paymentAcceptancePaymentIntentListResponse.d.ts.map