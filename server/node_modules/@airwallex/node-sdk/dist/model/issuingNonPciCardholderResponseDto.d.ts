import { IssuingNonPciAddressDto } from './issuingNonPciAddressDto';
import { IssuingNonPciIndividualResponseDto } from './issuingNonPciIndividualResponseDto';
export interface IssuingNonPciCardholderResponseDto {
    cardholder_id?: string;
    email?: string;
    individual?: IssuingNonPciIndividualResponseDto;
    mobile_number?: string;
    postal_address?: IssuingNonPciAddressDto;
    status?: IssuingNonPciCardholderResponseDto.StatusEnum;
    type?: IssuingNonPciCardholderResponseDto.TypeEnum;
}
export declare namespace IssuingNonPciCardholderResponseDto {
    const validStatusEnum: readonly ["INCOMPLETE", "PENDING", "READY", "DISABLED", "DELETED"];
    type StatusEnum = (typeof validStatusEnum)[number] | 'UNKNOWN';
    const validTypeEnum: readonly ["INDIVIDUAL", "DELEGATE"];
    type TypeEnum = (typeof validTypeEnum)[number] | 'UNKNOWN';
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=issuingNonPciCardholderResponseDto.d.ts.map