"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AcquireSetting = void 0;
var AcquireSetting;
(function (AcquireSetting) {
    AcquireSetting.discriminator = 'AcquireSetting';
    AcquireSetting.attributeTypeMap = [
        {
            name: 'attempt_expire_seconds',
            baseName: 'attempt_expire_seconds',
            type: 'number',
        },
        {
            name: 'card_pricing_mode',
            baseName: 'card_pricing_mode',
            type: 'string',
        },
        {
            name: 'customized_setting',
            baseName: 'customized_setting',
            type: 'AccountAcquireCustomizedSetting',
        },
        {
            name: 'dcc_setting',
            baseName: 'dcc_setting',
            type: 'MerchantDccSetting',
        },
        {
            name: 'default_mcc',
            baseName: 'default_mcc',
            type: 'string',
        },
        {
            name: 'ecs_setting',
            baseName: 'ecs_setting',
            type: 'EcsSetting',
        },
        {
            name: 'feature_list',
            baseName: 'feature_list',
            type: 'AccountAcquireFeatureListSetting',
        },
        {
            name: 'fee_config',
            baseName: 'fee_config',
            type: 'Array<AcquireFeeConfig>',
        },
        {
            name: 'fraud_checking_status',
            baseName: 'fraud_checking_status',
            type: 'string',
        },
        {
            name: 'mcp_setting',
            baseName: 'mcp_setting',
            type: 'MerchantMcpSetting',
        },
        {
            name: 'merchant_api_setting',
            baseName: 'merchant_api_setting',
            type: 'MerchantApiSetting',
        },
        {
            name: 'merchant_bpsp_settings',
            baseName: 'merchant_bpsp_settings',
            type: 'MerchantBpspSettings',
        },
        {
            name: 'merchant_ccy_setting',
            baseName: 'merchant_ccy_setting',
            type: 'AccountCurrencySetting',
        },
        {
            name: 'merchant_payment_method_provider_setting',
            baseName: 'merchant_payment_method_provider_setting',
            type: 'Array<MerchantPaymentMethodProviderSetting>',
        },
        {
            name: 'merchant_payment_method_setting',
            baseName: 'merchant_payment_method_setting',
            type: 'Array<MerchantPaymentMethodSetting>',
        },
        {
            name: 'merchant_payment_routing_setting',
            baseName: 'merchant_payment_routing_setting',
            type: 'Array<PaymentRoutingSetting>',
        },
        {
            name: 'merchant_setting',
            baseName: 'merchant_setting',
            type: 'MerchantSetting',
        },
        {
            name: 'merchant_settlement_setting',
            baseName: 'merchant_settlement_setting',
            type: 'MerchantSettlementSetting',
        },
        {
            name: 'merchant_transaction_ccy_setting',
            baseName: 'merchant_transaction_ccy_setting',
            type: 'MerchantTransactionCurrencySetting',
        },
        {
            name: 'payment_method_setting',
            baseName: 'payment_method_setting',
            type: '{ [key: string]: AccountAcquirePmSetting; }',
        },
        {
            name: 'payment_routing_setting',
            baseName: 'payment_routing_setting',
            type: 'Array<PaymentRoutingSetting>',
        },
        {
            name: 'platform_payments_type',
            baseName: 'platform_payments_type',
            type: 'string',
        },
        {
            name: 'pmp_setting',
            baseName: 'pmp_setting',
            type: 'AccountAcquirePmpSetting',
        },
        {
            name: 'risk_control_setting',
            baseName: 'risk_control_setting',
            type: 'RiskControlSetting',
        },
        {
            name: 'settlement_config',
            baseName: 'settlement_config',
            type: 'SettlementConfig',
        },
        {
            name: 'three_ds_settings',
            baseName: 'three_ds_settings',
            type: 'ThreeDsSettings',
        },
        {
            name: 'version_setting',
            baseName: 'version_setting',
            type: 'VersionSetting',
        },
    ];
})(AcquireSetting || (exports.AcquireSetting = AcquireSetting = {}));
//# sourceMappingURL=acquireSetting.js.map