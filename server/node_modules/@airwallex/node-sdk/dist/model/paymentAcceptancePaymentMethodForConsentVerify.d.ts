import { PaymentAcceptanceAchDirectDebitVerifyRequest } from './paymentAcceptanceAchDirectDebitVerifyRequest';
import { PaymentAcceptanceAlipayRequestForConsent } from './paymentAcceptanceAlipayRequestForConsent';
import { PaymentAcceptanceApplepayRequest } from './paymentAcceptanceApplepayRequest';
import { PaymentAcceptanceBacsDirectDebitVerifyRequest } from './paymentAcceptanceBacsDirectDebitVerifyRequest';
import { PaymentAcceptanceBecsDirectDebitVerifyRequest } from './paymentAcceptanceBecsDirectDebitVerifyRequest';
import { PaymentAcceptanceCardVerifyRequest } from './paymentAcceptanceCardVerifyRequest';
import { PaymentAcceptanceEftDirectDebitVerifyRequest } from './paymentAcceptanceEftDirectDebitVerifyRequest';
import { PaymentAcceptanceGooglepayRequest } from './paymentAcceptanceGooglepayRequest';
import { PaymentAcceptancePaytoRequest } from './paymentAcceptancePaytoRequest';
import { PaymentAcceptanceSepaDirectDebitVerifyRequest } from './paymentAcceptanceSepaDirectDebitVerifyRequest';
import { PaymentAcceptanceWechatPayRequest } from './paymentAcceptanceWechatPayRequest';
export interface PaymentAcceptancePaymentMethodForConsentVerify {
    ach_direct_debit?: PaymentAcceptanceAchDirectDebitVerifyRequest;
    alipaycn?: PaymentAcceptanceAlipayRequestForConsent;
    alipayhk?: PaymentAcceptanceAlipayRequestForConsent;
    applepay?: PaymentAcceptanceApplepayRequest;
    bacs_direct_debit?: PaymentAcceptanceBacsDirectDebitVerifyRequest;
    becs_direct_debit?: PaymentAcceptanceBecsDirectDebitVerifyRequest;
    card?: PaymentAcceptanceCardVerifyRequest;
    dana?: PaymentAcceptanceAlipayRequestForConsent;
    eft_direct_debit?: PaymentAcceptanceEftDirectDebitVerifyRequest;
    gcash?: PaymentAcceptanceAlipayRequestForConsent;
    googlepay?: PaymentAcceptanceGooglepayRequest;
    id?: string;
    kakaopay?: PaymentAcceptanceAlipayRequestForConsent;
    payto?: PaymentAcceptancePaytoRequest;
    rabbit_line_pay?: PaymentAcceptanceAlipayRequestForConsent;
    sepa_direct_debit?: PaymentAcceptanceSepaDirectDebitVerifyRequest;
    tng?: PaymentAcceptanceAlipayRequestForConsent;
    truemoney?: PaymentAcceptanceAlipayRequestForConsent;
    type: string;
    wechatpay?: PaymentAcceptanceWechatPayRequest;
}
export declare namespace PaymentAcceptancePaymentMethodForConsentVerify {
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=paymentAcceptancePaymentMethodForConsentVerify.d.ts.map