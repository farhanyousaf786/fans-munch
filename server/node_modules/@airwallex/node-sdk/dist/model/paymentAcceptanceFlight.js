"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentAcceptanceFlight = void 0;
var PaymentAcceptanceFlight;
(function (PaymentAcceptanceFlight) {
    PaymentAcceptanceFlight.discriminator = 'PaymentAcceptanceFlight';
    PaymentAcceptanceFlight.attributeTypeMap = [
        {
            name: 'arrival_airport_code',
            baseName: 'arrival_airport_code',
            type: 'string',
        },
        {
            name: 'arrival_city',
            baseName: 'arrival_city',
            type: 'string',
        },
        {
            name: 'arrival_country',
            baseName: 'arrival_country',
            type: 'string',
        },
        {
            name: 'class_of_service',
            baseName: 'class_of_service',
            type: 'string',
        },
        {
            name: 'departure_airport_code',
            baseName: 'departure_airport_code',
            type: 'string',
        },
        {
            name: 'departure_city',
            baseName: 'departure_city',
            type: 'string',
        },
        {
            name: 'departure_country',
            baseName: 'departure_country',
            type: 'string',
        },
        {
            name: 'flight_number',
            baseName: 'flight_number',
            type: 'string',
        },
        {
            name: 'insurances',
            baseName: 'insurances',
            type: 'Array<PaymentAcceptanceInsuranceDetails>',
        },
        {
            name: 'passenger_email',
            baseName: 'passenger_email',
            type: 'string',
        },
        {
            name: 'passenger_name',
            baseName: 'passenger_name',
            type: 'string',
        },
        {
            name: 'passenger_nationality',
            baseName: 'passenger_nationality',
            type: 'string',
        },
        {
            name: 'passenger_phone',
            baseName: 'passenger_phone',
            type: 'string',
        },
        {
            name: 'pre_tax_amount',
            baseName: 'pre_tax_amount',
            type: 'number',
        },
        {
            name: 'scheduled_arrival_at',
            baseName: 'scheduled_arrival_at',
            type: 'string',
        },
        {
            name: 'scheduled_departure_at',
            baseName: 'scheduled_departure_at',
            type: 'string',
        },
        {
            name: 'seat_number',
            baseName: 'seat_number',
            type: 'string',
        },
        {
            name: 'tax_amount',
            baseName: 'tax_amount',
            type: 'number',
        },
        {
            name: 'type',
            baseName: 'type',
            type: 'string',
        },
    ];
})(PaymentAcceptanceFlight || (exports.PaymentAcceptanceFlight = PaymentAcceptanceFlight = {}));
//# sourceMappingURL=paymentAcceptanceFlight.js.map