import { CurrencyMid } from './currencyMid';
import { MerchantPmpFlags } from './merchantPmpFlags';
export interface MerchantPaymentMethodProviderSetting {
    currency_mid?: Array<CurrencyMid>;
    dcc_ccy?: string;
    marketplace_id?: string;
    mcc?: string;
    merchant_pmp_flags?: MerchantPmpFlags;
    mid?: string;
    name: string;
    operation_type?: MerchantPaymentMethodProviderSetting.OperationTypeEnum;
    payment_method?: Array<string>;
    provider_specific_id?: {
        [key: string]: string;
    };
    status: MerchantPaymentMethodProviderSetting.StatusEnum;
}
export declare namespace MerchantPaymentMethodProviderSetting {
    const validOperationTypeEnum: readonly ["THREE_DS", "NON_THREE_DS", "ACCOUNT_VALIDATION", "AUTH_ONLY", "AUTH_AND_CAPTURE", "REFUND", "RECURRING"];
    type OperationTypeEnum = (typeof validOperationTypeEnum)[number] | 'UNKNOWN';
    const validStatusEnum: readonly ["ACTIVE", "INACTIVE"];
    type StatusEnum = (typeof validStatusEnum)[number] | 'UNKNOWN';
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=merchantPaymentMethodProviderSetting.d.ts.map