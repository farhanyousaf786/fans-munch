import { LocalTime } from './localTime';
import { ZoneOffset } from './zoneOffset';
export interface ZoneOffsetTransitionRule {
    day_of_month_indicator?: number;
    day_of_week?: ZoneOffsetTransitionRule.DayOfWeekEnum;
    local_time?: LocalTime;
    midnight_end_of_day?: boolean;
    month?: ZoneOffsetTransitionRule.MonthEnum;
    offset_after?: ZoneOffset;
    offset_before?: ZoneOffset;
    standard_offset?: ZoneOffset;
    time_definition?: ZoneOffsetTransitionRule.TimeDefinitionEnum;
}
export declare namespace ZoneOffsetTransitionRule {
    const validDayOfWeekEnum: readonly ["MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"];
    type DayOfWeekEnum = (typeof validDayOfWeekEnum)[number] | 'UNKNOWN';
    const validMonthEnum: readonly ["JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER"];
    type MonthEnum = (typeof validMonthEnum)[number] | 'UNKNOWN';
    const validTimeDefinitionEnum: readonly ["UTC", "WALL", "STANDARD"];
    type TimeDefinitionEnum = (typeof validTimeDefinitionEnum)[number] | 'UNKNOWN';
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=zoneOffsetTransitionRule.d.ts.map