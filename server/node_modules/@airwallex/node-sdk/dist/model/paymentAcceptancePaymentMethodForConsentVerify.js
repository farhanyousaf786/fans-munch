"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentAcceptancePaymentMethodForConsentVerify = void 0;
var PaymentAcceptancePaymentMethodForConsentVerify;
(function (PaymentAcceptancePaymentMethodForConsentVerify) {
    PaymentAcceptancePaymentMethodForConsentVerify.discriminator = 'PaymentAcceptancePaymentMethodForConsentVerify';
    PaymentAcceptancePaymentMethodForConsentVerify.attributeTypeMap = [
        {
            name: 'ach_direct_debit',
            baseName: 'ach_direct_debit',
            type: 'PaymentAcceptanceAchDirectDebitVerifyRequest',
        },
        {
            name: 'alipaycn',
            baseName: 'alipaycn',
            type: 'PaymentAcceptanceAlipayRequestForConsent',
        },
        {
            name: 'alipayhk',
            baseName: 'alipayhk',
            type: 'PaymentAcceptanceAlipayRequestForConsent',
        },
        {
            name: 'applepay',
            baseName: 'applepay',
            type: 'PaymentAcceptanceApplepayRequest',
        },
        {
            name: 'bacs_direct_debit',
            baseName: 'bacs_direct_debit',
            type: 'PaymentAcceptanceBacsDirectDebitVerifyRequest',
        },
        {
            name: 'becs_direct_debit',
            baseName: 'becs_direct_debit',
            type: 'PaymentAcceptanceBecsDirectDebitVerifyRequest',
        },
        {
            name: 'card',
            baseName: 'card',
            type: 'PaymentAcceptanceCardVerifyRequest',
        },
        {
            name: 'dana',
            baseName: 'dana',
            type: 'PaymentAcceptanceAlipayRequestForConsent',
        },
        {
            name: 'eft_direct_debit',
            baseName: 'eft_direct_debit',
            type: 'PaymentAcceptanceEftDirectDebitVerifyRequest',
        },
        {
            name: 'gcash',
            baseName: 'gcash',
            type: 'PaymentAcceptanceAlipayRequestForConsent',
        },
        {
            name: 'googlepay',
            baseName: 'googlepay',
            type: 'PaymentAcceptanceGooglepayRequest',
        },
        {
            name: 'id',
            baseName: 'id',
            type: 'string',
        },
        {
            name: 'kakaopay',
            baseName: 'kakaopay',
            type: 'PaymentAcceptanceAlipayRequestForConsent',
        },
        {
            name: 'payto',
            baseName: 'payto',
            type: 'PaymentAcceptancePaytoRequest',
        },
        {
            name: 'rabbit_line_pay',
            baseName: 'rabbit_line_pay',
            type: 'PaymentAcceptanceAlipayRequestForConsent',
        },
        {
            name: 'sepa_direct_debit',
            baseName: 'sepa_direct_debit',
            type: 'PaymentAcceptanceSepaDirectDebitVerifyRequest',
        },
        {
            name: 'tng',
            baseName: 'tng',
            type: 'PaymentAcceptanceAlipayRequestForConsent',
        },
        {
            name: 'truemoney',
            baseName: 'truemoney',
            type: 'PaymentAcceptanceAlipayRequestForConsent',
        },
        {
            name: 'type',
            baseName: 'type',
            type: 'string',
        },
        {
            name: 'wechatpay',
            baseName: 'wechatpay',
            type: 'PaymentAcceptanceWechatPayRequest',
        },
    ];
})(PaymentAcceptancePaymentMethodForConsentVerify || (exports.PaymentAcceptancePaymentMethodForConsentVerify = PaymentAcceptancePaymentMethodForConsentVerify = {}));
//# sourceMappingURL=paymentAcceptancePaymentMethodForConsentVerify.js.map