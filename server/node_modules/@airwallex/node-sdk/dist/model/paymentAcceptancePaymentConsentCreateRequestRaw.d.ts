import { PaymentAcceptanceTermsOfUse } from './paymentAcceptanceTermsOfUse';
export interface PaymentAcceptancePaymentConsentCreateRequestRaw {
    connected_account_id?: string;
    customer_id: string;
    merchant_trigger_reason?: PaymentAcceptancePaymentConsentCreateRequestRaw.MerchantTriggerReasonEnum;
    metadata?: object;
    next_triggered_by: PaymentAcceptancePaymentConsentCreateRequestRaw.NextTriggeredByEnum;
    request_id: string;
    terms_of_use?: PaymentAcceptanceTermsOfUse;
}
export declare namespace PaymentAcceptancePaymentConsentCreateRequestRaw {
    const validMerchantTriggerReasonEnum: readonly ["installments", "scheduled", "unscheduled"];
    type MerchantTriggerReasonEnum = (typeof validMerchantTriggerReasonEnum)[number] | 'UNKNOWN';
    const validNextTriggeredByEnum: readonly ["customer", "merchant"];
    type NextTriggeredByEnum = (typeof validNextTriggeredByEnum)[number] | 'UNKNOWN';
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=paymentAcceptancePaymentConsentCreateRequestRaw.d.ts.map