"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SimulationTransactionDTO = void 0;
var SimulationTransactionDTO;
(function (SimulationTransactionDTO) {
    SimulationTransactionDTO.validFailureReasonEnum = [
        'ACCOUNT_INVALID',
        'CARDHOLDER_VERIFICATION_FAILED',
        'CARD_INVALID',
        'CURRENCY_NOT_ALLOWED',
        'CVV_INVALID',
        'INSUFFICIENT_FUNDS',
        'INTERNAL_ERROR',
        'INVALID_EXPIRY_DATE',
        'LIMIT_EXCEEDED',
        'MERCHANT_CATEGORY_NOT_ALLOWED',
        'NOT_SUPPORTED',
        'PIN_INVALID',
        'PIN_RETRIES_EXCEEDED',
        'REMOTE_AUTH_DECLINED',
        'TRANSACTION_BLOCKED',
    ];
    SimulationTransactionDTO.discriminator = 'SimulationTransactionDTO';
    SimulationTransactionDTO.attributeTypeMap = [
        {
            name: 'auth_code',
            baseName: 'auth_code',
            type: 'string',
        },
        {
            name: 'billing_amount',
            baseName: 'billing_amount',
            type: 'number',
        },
        {
            name: 'billing_currency',
            baseName: 'billing_currency',
            type: 'string',
        },
        {
            name: 'card_id',
            baseName: 'card_id',
            type: 'string',
        },
        {
            name: 'card_nickname',
            baseName: 'card_nickname',
            type: 'string',
        },
        {
            name: 'client_data',
            baseName: 'client_data',
            type: 'string',
        },
        {
            name: 'failure_reason',
            baseName: 'failure_reason',
            type: 'SimulationTransactionDTO.FailureReasonEnum',
        },
        {
            name: 'masked_card_number',
            baseName: 'masked_card_number',
            type: 'string',
        },
        {
            name: 'merchant',
            baseName: 'merchant',
            type: 'SimulationMerchantDto',
        },
        {
            name: 'network_transaction_id',
            baseName: 'network_transaction_id',
            type: 'string',
        },
        {
            name: 'posted_date',
            baseName: 'posted_date',
            type: 'Date',
        },
        {
            name: 'retrieval_ref',
            baseName: 'retrieval_ref',
            type: 'string',
        },
        {
            name: 'status',
            baseName: 'status',
            type: 'string',
        },
        {
            name: 'transaction_amount',
            baseName: 'transaction_amount',
            type: 'number',
        },
        {
            name: 'transaction_currency',
            baseName: 'transaction_currency',
            type: 'string',
        },
        {
            name: 'transaction_date',
            baseName: 'transaction_date',
            type: 'Date',
        },
        {
            name: 'transaction_id',
            baseName: 'transaction_id',
            type: 'string',
        },
        {
            name: 'transaction_type',
            baseName: 'transaction_type',
            type: 'string',
        },
    ];
})(SimulationTransactionDTO || (exports.SimulationTransactionDTO = SimulationTransactionDTO = {}));
//# sourceMappingURL=simulationTransactionDTO.js.map