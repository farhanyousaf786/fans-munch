import { ClientRoutingCode } from './clientRoutingCode';
export interface GlobalAccountSupportedFeature {
    currency: string;
    local_clearing_system?: GlobalAccountSupportedFeature.LocalClearingSystemEnum;
    routing_codes: Array<ClientRoutingCode>;
    transfer_method?: GlobalAccountSupportedFeature.TransferMethodEnum;
    type: GlobalAccountSupportedFeature.TypeEnum;
}
export declare namespace GlobalAccountSupportedFeature {
    const validLocalClearingSystemEnum: readonly ["BANK_TRANSFER", "BECS", "PAYTO", "EFT", "INTERAC", "SEPA", "SEPA_INSTANT", "TARGET2", "INTRADAGCLEARING", "KRONOS2", "STRAKSCLEARING", "BACS", "CHAPS", "FASTER_PAYMENTS", "ACH", "FPS", "RTGS", "ATM_PRIMA", "BI_FAST", "IPI", "SKN", "ZENGIN", "HOFINET", "SPEI", "DUITNOW", "GIRO", "RENTAS", "ELIXIR", "EXPRESS_ELIXIR", "SORBNET", "FAST", "FEDWIRE", "FEDNOW", "ZAHAV", "MASAV", "NAPAS", "CITAD", "TED", "PIX", "RTP", "INSTAPAY", "PESONET"];
    type LocalClearingSystemEnum = (typeof validLocalClearingSystemEnum)[number] | 'UNKNOWN';
    const validTransferMethodEnum: readonly ["LOCAL", "SWIFT"];
    type TransferMethodEnum = (typeof validTransferMethodEnum)[number] | 'UNKNOWN';
    const validTypeEnum: readonly ["DEPOSIT", "DIRECT_DEBIT"];
    type TypeEnum = (typeof validTypeEnum)[number] | 'UNKNOWN';
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=globalAccountSupportedFeature.d.ts.map