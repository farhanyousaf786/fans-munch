"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IndividualAccountUsageApiDto = void 0;
var IndividualAccountUsageApiDto;
(function (IndividualAccountUsageApiDto) {
    IndividualAccountUsageApiDto.validCardUsageEnum = [
        'GENERAL_EXPENSES',
        'BUSINESS_EXPENSES',
        'EDUCATION',
        'TRAVEL_TRANSPORT',
        'INSURANCE',
        'SERVICES',
        'BILLS_UTILITIES',
        'INVESTMENT',
        'FEES_CHARGES',
        'HEALTHCARE',
        'HOUSING',
        'NO_CARD_USAGE',
    ];
    IndividualAccountUsageApiDto.validCollectionFromEnum = [
        'ALLOWANCE_FROM_FAMILY',
        'BENEFITS_FROM_STATE',
        'EMPLOYMENT_INCOME',
        'INVESTMENT_INCOME_NONPROPERTY',
        'INCOME_FROM_PROPERTY',
        'INCOME_FROM_MARKETPLLACES',
        'INSURANCE',
        'LOANS',
        'SAVINGS',
        'OTHER_THIRD_PARTIES',
        'PAYMENT_REFUNDS',
    ];
    IndividualAccountUsageApiDto.validPayoutToEnum = [
        'CONNECTED_AWX_ACCOUNT',
        'EDUCATIONAL_INSTITUTIONS',
        'FRIENDS_OR_RELATIVES',
        'MARKETPLACE_PLATFORM',
        'MARKETPLACE_SELLERS',
        'MOBILITY_PLATFORM',
        'OTHER_THIRD_PARTY_INDIVIDUALS',
        'OWN_BANK_ACCOUNT',
    ];
    IndividualAccountUsageApiDto.validProductReferenceEnum = [
        'CREATE_CARDS',
        'MAKE_TRANSFERS',
        'MARKETPLACE_WALLET',
        'MOBILITY_WALLET',
        'OTHERS',
        'PAYROLL_WALLET',
        'RECEIVE_TRANSFERS',
        'TRADE_SECURITIES',
        'TUITION_PAYMENTS',
    ];
    IndividualAccountUsageApiDto.discriminator = 'IndividualAccountUsageApiDto';
    IndividualAccountUsageApiDto.attributeTypeMap = [
        {
            name: 'card_usage',
            baseName: 'card_usage',
            type: 'Array<IndividualAccountUsageApiDto.CardUsageEnum>',
        },
        {
            name: 'collection_country_codes',
            baseName: 'collection_country_codes',
            type: 'Array<string>',
        },
        {
            name: 'collection_from',
            baseName: 'collection_from',
            type: 'Array<IndividualAccountUsageApiDto.CollectionFromEnum>',
        },
        {
            name: 'expected_monthly_transaction_volume',
            baseName: 'expected_monthly_transaction_volume',
            type: 'TransactionVolumeApiDto',
        },
        {
            name: 'payout_country_codes',
            baseName: 'payout_country_codes',
            type: 'Array<string>',
        },
        {
            name: 'payout_to',
            baseName: 'payout_to',
            type: 'Array<IndividualAccountUsageApiDto.PayoutToEnum>',
        },
        {
            name: 'product_reference',
            baseName: 'product_reference',
            type: 'Array<IndividualAccountUsageApiDto.ProductReferenceEnum>',
        },
    ];
})(IndividualAccountUsageApiDto || (exports.IndividualAccountUsageApiDto = IndividualAccountUsageApiDto = {}));
//# sourceMappingURL=individualAccountUsageApiDto.js.map