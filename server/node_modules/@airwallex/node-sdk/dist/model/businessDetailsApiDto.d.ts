import { AddressApiDto } from './addressApiDto';
import { BusinessAccountUsageApiDto } from './businessAccountUsageApiDto';
import { BusinessDocumentationApiDto } from './businessDocumentationApiDto';
import { BusinessIdentifierApiDto } from './businessIdentifierApiDto';
export interface BusinessDetailsApiDto {
    account_usage?: BusinessAccountUsageApiDto;
    as_trustee?: boolean;
    attachments?: BusinessDocumentationApiDto;
    business_address?: AddressApiDto;
    business_identifiers?: Array<BusinessIdentifierApiDto>;
    business_name?: string;
    business_name_english?: string;
    business_name_trading?: string;
    business_start_date?: string;
    business_structure?: BusinessDetailsApiDto.BusinessStructureEnum;
    contact_number?: string;
    description_of_goods_or_services?: string;
    explanation_for_high_risk_countries_exposure?: string;
    has_nominee_shareholders?: boolean;
    industry_category_code?: string;
    no_shareholders_with_over_25percent?: boolean;
    operating_country?: Array<string>;
    registration_address?: AddressApiDto;
    registration_address_english?: AddressApiDto;
    state_of_incorporation?: string;
    url?: string;
}
export declare namespace BusinessDetailsApiDto {
    const validBusinessStructureEnum: readonly ["COMPANY", "CORPORATION", "GENERAL_PARTNERSHIP", "LIMITED_LIABILITY_COMPANY", "LIMITED_LIABILITY_PARTNERSHIP", "LIMITED_PARTNERSHIP", "PARTNERSHIP", "SELF_MANAGED_SUPER_FUND", "SOLE_PROPRIETOR", "NON_REGISTERED_SOLE_PROPRIETOR", "OTHER"];
    type BusinessStructureEnum = (typeof validBusinessStructureEnum)[number] | 'UNKNOWN';
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=businessDetailsApiDto.d.ts.map