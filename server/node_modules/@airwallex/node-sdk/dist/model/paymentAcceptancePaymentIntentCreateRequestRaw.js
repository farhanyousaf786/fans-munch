"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentAcceptancePaymentIntentCreateRequestRaw = void 0;
var PaymentAcceptancePaymentIntentCreateRequestRaw;
(function (PaymentAcceptancePaymentIntentCreateRequestRaw) {
    PaymentAcceptancePaymentIntentCreateRequestRaw.discriminator = 'PaymentAcceptancePaymentIntentCreateRequestRaw';
    PaymentAcceptancePaymentIntentCreateRequestRaw.attributeTypeMap = [
        {
            name: 'additional_info',
            baseName: 'additional_info',
            type: 'PaymentAcceptanceAdditionalInfoCreate',
        },
        {
            name: 'amount',
            baseName: 'amount',
            type: 'number',
        },
        {
            name: 'connected_account_id',
            baseName: 'connected_account_id',
            type: 'string',
        },
        {
            name: 'currency',
            baseName: 'currency',
            type: 'string',
        },
        {
            name: 'customer',
            baseName: 'customer',
            type: 'PaymentAcceptanceCustomerDetails',
        },
        {
            name: 'customer_id',
            baseName: 'customer_id',
            type: 'string',
        },
        {
            name: 'descriptor',
            baseName: 'descriptor',
            type: 'string',
        },
        {
            name: 'device_data',
            baseName: 'device_data',
            type: 'PaymentAcceptanceDeviceData',
        },
        {
            name: 'external_recurring_data',
            baseName: 'external_recurring_data',
            type: 'PaymentAcceptanceExternalRecurringData',
        },
        {
            name: 'funds_split_data',
            baseName: 'funds_split_data',
            type: 'Array<PaymentAcceptanceFundsSplitDataRaw>',
        },
        {
            name: 'merchant_order_id',
            baseName: 'merchant_order_id',
            type: 'string',
        },
        {
            name: 'metadata',
            baseName: 'metadata',
            type: '{ [key: string]: string; }',
        },
        {
            name: 'order',
            baseName: 'order',
            type: 'PaymentAcceptancePurchaseOrderCreate',
        },
        {
            name: 'payment_consent',
            baseName: 'payment_consent',
            type: 'PaymentAcceptancePaymentConsentOptionsRequest',
        },
        {
            name: 'payment_method',
            baseName: 'payment_method',
            type: 'PaymentAcceptancePaymentMethodRequestForIntentCreation',
        },
        {
            name: 'payment_method_options',
            baseName: 'payment_method_options',
            type: 'PaymentAcceptancePaymentMethodOptionsForCreate',
        },
        {
            name: 'request_id',
            baseName: 'request_id',
            type: 'string',
        },
        {
            name: 'return_url',
            baseName: 'return_url',
            type: 'string',
        },
        {
            name: 'risk_control_options',
            baseName: 'risk_control_options',
            type: 'PaymentAcceptanceRiskControlOptions',
        },
    ];
})(PaymentAcceptancePaymentIntentCreateRequestRaw || (exports.PaymentAcceptancePaymentIntentCreateRequestRaw = PaymentAcceptancePaymentIntentCreateRequestRaw = {}));
//# sourceMappingURL=paymentAcceptancePaymentIntentCreateRequestRaw.js.map