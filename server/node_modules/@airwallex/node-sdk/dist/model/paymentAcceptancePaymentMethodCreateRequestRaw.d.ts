import { PaymentAcceptanceApplepayRequest } from './paymentAcceptanceApplepayRequest';
import { PaymentAcceptanceCardRequest } from './paymentAcceptanceCardRequest';
import { PaymentAcceptanceGooglepayRequest } from './paymentAcceptanceGooglepayRequest';
export interface PaymentAcceptancePaymentMethodCreateRequestRaw {
    applepay?: PaymentAcceptanceApplepayRequest;
    card?: PaymentAcceptanceCardRequest;
    customer_id: string;
    googlepay?: PaymentAcceptanceGooglepayRequest;
    metadata?: {
        [key: string]: string;
    };
    request_id: string;
    type: PaymentAcceptancePaymentMethodCreateRequestRaw.TypeEnum;
}
export declare namespace PaymentAcceptancePaymentMethodCreateRequestRaw {
    const validTypeEnum: readonly ["card"];
    type TypeEnum = (typeof validTypeEnum)[number] | 'UNKNOWN';
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=paymentAcceptancePaymentMethodCreateRequestRaw.d.ts.map