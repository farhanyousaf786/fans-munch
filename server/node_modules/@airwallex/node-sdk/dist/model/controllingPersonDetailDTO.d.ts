import { Address } from './address';
import { Attachment } from './attachment';
import { FormerName } from './formerName';
import { IdentificationAdditionalInfo } from './identificationAdditionalInfo';
import { IdentificationDocument } from './identificationDocument';
import { Name } from './name';
export interface ControllingPersonDetailDTO {
    active: boolean;
    address?: Address;
    alias_name?: Name;
    attachments: {
        [key: string]: Array<Attachment>;
    };
    date_of_birth?: string;
    filling_as?: ControllingPersonDetailDTO.FillingAsEnum;
    first_name?: string;
    first_name_english?: string;
    former_name?: FormerName;
    id_extension_type?: string;
    identification_additional_info?: IdentificationAdditionalInfo;
    identification_effective_date?: string;
    identification_expiry_date?: string;
    identification_number?: string;
    identification_type?: ControllingPersonDetailDTO.IdentificationTypeEnum;
    job_title?: string;
    last_name?: string;
    last_name_english?: string;
    middle_name?: string;
    middle_name_ascii?: string;
    nationality?: ControllingPersonDetailDTO.NationalityEnum;
    ownership?: number;
    pep?: boolean;
    person_id?: string;
    phone_number?: string;
    secondary_document?: IdentificationDocument;
    source?: string;
    ubo: boolean;
    ubo_id?: string;
}
export declare namespace ControllingPersonDetailDTO {
    const validFillingAsEnum: readonly ["LEGALREP", "AUTHORISEDPERSON", "CONTROLLINGPERSON", "BENEFICIALOWNER"];
    type FillingAsEnum = (typeof validFillingAsEnum)[number] | 'UNKNOWN';
    const validIdentificationTypeEnum: readonly ["CN_NATIONAL_ID", "CN_TRAVEL_PERMIT_FOR_HK", "CN_TRAVEL_PERMIT_FOR_MO", "CN_TRAVEL_PERMIT_FOR_TW", "PASSPORT", "DRIVERS_LICENCE", "MEDICARE_CARD"];
    type IdentificationTypeEnum = (typeof validIdentificationTypeEnum)[number] | 'UNKNOWN';
    const validNationalityEnum: readonly ["UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW"];
    type NationalityEnum = (typeof validNationalityEnum)[number] | 'UNKNOWN';
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=controllingPersonDetailDTO.d.ts.map