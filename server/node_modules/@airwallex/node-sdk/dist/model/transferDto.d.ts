import { ApplicationFeeDto } from './applicationFeeDto';
import { ApplicationFeeOption } from './applicationFeeOption';
import { BeneficiaryDto } from './beneficiaryDto';
import { DispatchInfoDto } from './dispatchInfoDto';
import { FundingDto } from './fundingDto';
import { PayerDto } from './payerDto';
import { PrepaymentDTO } from './prepaymentDTO';
import { UnderlyingConversionDTO } from './underlyingConversionDTO';
export interface TransferDto {
    amount_beneficiary_receives: number;
    amount_payer_pays: number;
    application_fee_options?: Array<ApplicationFeeOption>;
    application_fees?: Array<ApplicationFeeDto>;
    batch_transfer_id?: string;
    beneficiary: BeneficiaryDto;
    beneficiary_id?: string;
    conversion?: UnderlyingConversionDTO;
    created_at: string;
    dispatch_date?: string;
    dispatch_info?: DispatchInfoDto;
    failure_reason?: string;
    failure_type?: string;
    fee_amount: number;
    fee_currency: string;
    fee_paid_by: string;
    funding: FundingDto;
    id: string;
    lock_rate_on_create?: boolean;
    metadata?: {
        [key: string]: string;
    };
    payer: PayerDto;
    payer_id?: string;
    prepayment?: PrepaymentDTO;
    reason: string;
    reference: string;
    remarks?: string;
    request_id: string;
    short_reference_id: string;
    source_amount: number;
    source_currency: string;
    status: string;
    swift_charge_option?: string;
    transfer_amount: number;
    transfer_currency: string;
    transfer_date: string;
    transfer_method: string;
    updated_at: string;
}
export declare namespace TransferDto {
    const discriminator: string;
    const attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
}
//# sourceMappingURL=transferDto.d.ts.map