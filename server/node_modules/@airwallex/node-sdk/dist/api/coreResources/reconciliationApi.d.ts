import { CustomRequestOptions } from '../../common/request';
import { PagedQueryResultDtoOfTCBalanceDto } from '../../model/pagedQueryResultDtoOfTCBalanceDto';
import { PagedQueryResultDtoOfTCTransactionDto } from '../../model/pagedQueryResultDtoOfTCTransactionDto';
export interface ParamsReconciliationApiqueryBalancesByReq {
    not_found_as_error?: boolean;
}
export interface ParamsReconciliationApiqueryBalances {
    client_request_id?: string;
    currency?: string;
    from_posted_at?: string;
    page_num?: number;
    page_size?: number;
    to_posted_at?: string;
    type?: string;
}
export interface ParamsReconciliationApiqueryTransactionsByReq {
    not_found_as_error?: boolean;
}
export interface ParamsReconciliationApiqueryTransactions {
    client_request_id?: string;
    from_created_at?: string;
    page_num?: number;
    page_size?: number;
    to_created_at?: string;
    type?: string;
}
export declare class ReconciliationApi {
    queryBalancesByReq(requests: Array<string>, { not_found_as_error }: ParamsReconciliationApiqueryBalancesByReq, options?: CustomRequestOptions): Promise<PagedQueryResultDtoOfTCBalanceDto>;
    queryBalances({ client_request_id, currency, from_posted_at, page_num, page_size, to_posted_at, type }: ParamsReconciliationApiqueryBalances, options?: CustomRequestOptions): Promise<PagedQueryResultDtoOfTCBalanceDto>;
    queryTransactionsByReq(requests: Array<string>, { not_found_as_error }: ParamsReconciliationApiqueryTransactionsByReq, options?: CustomRequestOptions): Promise<PagedQueryResultDtoOfTCTransactionDto>;
    queryTransactions({ client_request_id, from_created_at, page_num, page_size, to_created_at, type }: ParamsReconciliationApiqueryTransactions, options?: CustomRequestOptions): Promise<PagedQueryResultDtoOfTCTransactionDto>;
}
//# sourceMappingURL=reconciliationApi.d.ts.map