import { CustomRequestOptions } from '../../common/request';
import { ActiveGlobalAccountDto } from '../../model/activeGlobalAccountDto';
import { DirectDebitOutMandateDto } from '../../model/directDebitOutMandateDto';
import { GlobalAccountClientDto } from '../../model/globalAccountClientDto';
import { GlobalAccountRequestDto } from '../../model/globalAccountRequestDto';
import { GlobalAccountStatementLetterDto } from '../../model/globalAccountStatementLetterDto';
import { GlobalAccountUpdateDto } from '../../model/globalAccountUpdateDto';
import { PagedDirectDebitOutMandateDto } from '../../model/pagedDirectDebitOutMandateDto';
import { PagedGlobalAccountDto } from '../../model/pagedGlobalAccountDto';
import { PagedTransactionDto } from '../../model/pagedTransactionDto';
export interface ParamsGlobalAccountApigetGlobalAccountTransactions {
    from_created_at?: string;
    page_num?: number;
    page_size?: number;
    to_created_at?: string;
}
export interface ParamsGlobalAccountApigetGlobalAccounts {
    country_code?: string;
    from_created_at?: string;
    nick_name?: string;
    page?: string;
    page_size?: number;
    required_features_currency?: string;
    status?: string;
    supported_features_currency?: string;
    to_created_at?: string;
}
export interface ParamsGlobalAccountApigetMandatesByGAId {
    from_created_at?: string;
    page_num?: number;
    page_size?: number;
    status?: string;
    to_created_at?: string;
}
export declare class GlobalAccountApi {
    cancelMandate(global_account_id: string, id: string, options?: CustomRequestOptions): Promise<boolean>;
    closeGlobalAccount(id: string, options?: CustomRequestOptions): Promise<GlobalAccountClientDto>;
    createGlobalAccount(globalAccountRequestDto: GlobalAccountRequestDto, options?: CustomRequestOptions): Promise<ActiveGlobalAccountDto>;
    getAccountStatementLetter(id: string, globalAccountStatementLetterDto: GlobalAccountStatementLetterDto, options?: CustomRequestOptions): Promise<string>;
    getGlobalAccountTransactions(id: string, { from_created_at, page_num, page_size, to_created_at }: ParamsGlobalAccountApigetGlobalAccountTransactions, options?: CustomRequestOptions): Promise<PagedTransactionDto>;
    getGlobalAccount(id: string, options?: CustomRequestOptions): Promise<GlobalAccountClientDto>;
    getGlobalAccounts({ country_code, from_created_at, nick_name, page, page_size, required_features_currency, status, supported_features_currency, to_created_at }: ParamsGlobalAccountApigetGlobalAccounts, options?: CustomRequestOptions): Promise<PagedGlobalAccountDto>;
    getMandate(global_account_id: string, id: string, options?: CustomRequestOptions): Promise<DirectDebitOutMandateDto>;
    getMandatesByGAId(global_account_id: string, { from_created_at, page_num, page_size, status, to_created_at }: ParamsGlobalAccountApigetMandatesByGAId, options?: CustomRequestOptions): Promise<PagedDirectDebitOutMandateDto>;
    updateGlobalAccount(id: string, globalAccountUpdateDto: GlobalAccountUpdateDto, options?: CustomRequestOptions): Promise<GlobalAccountClientDto>;
}
//# sourceMappingURL=globalAccountApi.d.ts.map