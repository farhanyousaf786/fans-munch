"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScaleInvitationLinksApi = void 0;
const apiClient_1 = require("../../client/apiClient");
const dataParser_1 = require("../../utils/dataParser");
const accountLinkResApiDto_1 = require("../../model/accountLinkResApiDto");
class ScaleInvitationLinksApi {
    async createNewAccountLink(link, options = {}) {
        const localVarPath = '/api/v1/accounts/invitation_links/create';
        const { headers, timeout, responseType } = options;
        let localVarHeaderParams = Object.assign({}, headers ? headers : {});
        if (link === null || link === undefined) {
            throw new Error('Required parameter link was null or undefined when calling createNewAccountLink.');
        }
        const data = await apiClient_1.apiClient.post(localVarPath, {
            headers: localVarHeaderParams,
            timeout,
            responseType,
        }, link);
        const typeName = accountLinkResApiDto_1.AccountLinkResApiDto.discriminator;
        return (0, dataParser_1.parseDataToType)(data, typeName);
    }
    async getAccountInvitationLink(id, options = {}) {
        if (id === null || id === undefined) {
            throw new Error('Required parameter id was null or undefined when calling getAccountInvitationLink.');
        }
        const localVarPath = '/api/v1/accounts/invitation_links/{id}'.replace('{' + 'id' + '}', encodeURIComponent(String(id)));
        const { headers, timeout, responseType } = options;
        let localVarHeaderParams = Object.assign({}, headers ? headers : {});
        const data = await apiClient_1.apiClient.get(localVarPath, {
            headers: localVarHeaderParams,
            timeout,
            responseType,
        });
        const typeName = accountLinkResApiDto_1.AccountLinkResApiDto.discriminator;
        return (0, dataParser_1.parseDataToType)(data, typeName);
    }
}
exports.ScaleInvitationLinksApi = ScaleInvitationLinksApi;
//# sourceMappingURL=scaleInvitationLinksApi.js.map