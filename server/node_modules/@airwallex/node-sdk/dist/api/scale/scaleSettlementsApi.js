"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScaleSettlementsApi = void 0;
const apiClient_1 = require("../../client/apiClient");
const dataParser_1 = require("../../utils/dataParser");
const batchSettlementResponseDTO_1 = require("../../model/batchSettlementResponseDTO");
class ScaleSettlementsApi {
    async createSettlement(createSettlementRequestDTO, options = {}) {
        const localVarPath = '/api/v1/settlement_reports/prepare';
        const { headers, timeout, responseType } = options;
        let localVarHeaderParams = Object.assign({}, headers ? headers : {});
        if (createSettlementRequestDTO === null || createSettlementRequestDTO === undefined) {
            throw new Error('Required parameter createSettlementRequestDTO was null or undefined when calling createSettlement.');
        }
        const data = await apiClient_1.apiClient.post(localVarPath, {
            headers: localVarHeaderParams,
            timeout,
            responseType,
        }, createSettlementRequestDTO);
        const typeName = batchSettlementResponseDTO_1.BatchSettlementResponseDTO.discriminator;
        return (0, dataParser_1.parseDataToType)(data, typeName);
    }
    async getSettlementReport(settlement_report_id, options = {}) {
        if (settlement_report_id === null || settlement_report_id === undefined) {
            throw new Error('Required parameter settlement_report_id was null or undefined when calling getSettlementReport.');
        }
        const localVarPath = '/api/v1/settlement_reports/{settlement_report_id}'.replace('{' + 'settlement_report_id' + '}', encodeURIComponent(String(settlement_report_id)));
        const { headers, timeout, responseType } = options;
        let localVarHeaderParams = Object.assign({}, headers ? headers : {});
        const data = await apiClient_1.apiClient.get(localVarPath, {
            headers: localVarHeaderParams,
            timeout,
            responseType,
        });
        const typeName = 'any';
        return (0, dataParser_1.parseDataToType)(data, typeName);
    }
}
exports.ScaleSettlementsApi = ScaleSettlementsApi;
//# sourceMappingURL=scaleSettlementsApi.js.map