import { CustomRequestOptions } from '../../common/request';
import { IssuingNonPciCardholderResponseDto } from '../../model/issuingNonPciCardholderResponseDto';
import { IssuingNonPciDeleteCardholderResponseDto } from '../../model/issuingNonPciDeleteCardholderResponseDto';
import { IssuingNonPciNewCardholderRequestDto } from '../../model/issuingNonPciNewCardholderRequestDto';
import { IssuingNonPciQueryResultOfIssuingNonPciCardholderResponseDto } from '../../model/issuingNonPciQueryResultOfIssuingNonPciCardholderResponseDto';
import { IssuingNonPciUpdateCardholderRequestDto } from '../../model/issuingNonPciUpdateCardholderRequestDto';
export interface ParamsIssuingCardholdersApigetCardholders {
    cardholder_status?: 'PENDING' | 'READY' | 'DISABLED' | 'INCOMPLETE';
    email?: string;
    page_num?: number;
    page_size?: number;
}
export declare class IssuingCardholdersApi {
    createCardholder(newCardholderRequest: IssuingNonPciNewCardholderRequestDto, options?: CustomRequestOptions): Promise<IssuingNonPciCardholderResponseDto>;
    deleteCardholder(id: string, options?: CustomRequestOptions): Promise<IssuingNonPciDeleteCardholderResponseDto>;
    getCardholderById(id: string, options?: CustomRequestOptions): Promise<IssuingNonPciCardholderResponseDto>;
    getCardholders({ cardholder_status, email, page_num, page_size }: ParamsIssuingCardholdersApigetCardholders, options?: CustomRequestOptions): Promise<IssuingNonPciQueryResultOfIssuingNonPciCardholderResponseDto>;
    updateCardholder(id: string, updateCardholderRequest: IssuingNonPciUpdateCardholderRequestDto, options?: CustomRequestOptions): Promise<IssuingNonPciCardholderResponseDto>;
}
//# sourceMappingURL=issuingCardholdersApi.d.ts.map