import { CustomRequestOptions } from '../../common/request';
import { ConversionAmendmentCreateRequestDto } from '../../model/conversionAmendmentCreateRequestDto';
import { ConversionAmendmentDto } from '../../model/conversionAmendmentDto';
import { ConversionAmendmentQuoteDto } from '../../model/conversionAmendmentQuoteDto';
import { PagedQueryResultDtoOfConversionAmendmentDto } from '../../model/pagedQueryResultDtoOfConversionAmendmentDto';
export interface ParamsTransactionalFXConversionAmendmentsApifindConversionAmendments {
    conversion_id: string;
}
export declare class TransactionalFXConversionAmendmentsApi {
    createConversionAmendment(request: ConversionAmendmentCreateRequestDto, options?: CustomRequestOptions): Promise<ConversionAmendmentDto>;
    findConversionAmendments({ conversion_id }: ParamsTransactionalFXConversionAmendmentsApifindConversionAmendments, options?: CustomRequestOptions): Promise<PagedQueryResultDtoOfConversionAmendmentDto>;
    getConversionAmendment(conversion_amendment_id: string, options?: CustomRequestOptions): Promise<ConversionAmendmentDto>;
    quoteConversionAmendment(request: ConversionAmendmentCreateRequestDto, options?: CustomRequestOptions): Promise<ConversionAmendmentQuoteDto>;
}
//# sourceMappingURL=transactionalFXConversionAmendmentsApi.d.ts.map