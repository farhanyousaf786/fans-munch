"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentAcceptanceCustomsDeclarationsApi = void 0;
const apiClient_1 = require("../../client/apiClient");
const dataParser_1 = require("../../utils/dataParser");
const paymentAcceptanceCustomsDeclaration_1 = require("../../model/paymentAcceptanceCustomsDeclaration");
class PaymentAcceptanceCustomsDeclarationsApi {
    async createCustomsDeclaration(customs_declaration_create_request, options = {}) {
        const localVarPath = '/api/v1/pa/customs_declarations/create';
        const { headers, timeout, responseType } = options;
        let localVarHeaderParams = Object.assign({}, headers ? headers : {});
        if (customs_declaration_create_request === null || customs_declaration_create_request === undefined) {
            throw new Error('Required parameter customs_declaration_create_request was null or undefined when calling createCustomsDeclaration.');
        }
        const data = await apiClient_1.apiClient.post(localVarPath, {
            headers: localVarHeaderParams,
            timeout,
            responseType,
        }, customs_declaration_create_request);
        const typeName = paymentAcceptanceCustomsDeclaration_1.PaymentAcceptanceCustomsDeclaration.discriminator;
        return (0, dataParser_1.parseDataToType)(data, typeName);
    }
    async redeclareCustomsDeclaration(id, customs_declaration_redeclare_request, options = {}) {
        if (id === null || id === undefined) {
            throw new Error('Required parameter id was null or undefined when calling redeclareCustomsDeclaration.');
        }
        const localVarPath = '/api/v1/pa/customs_declarations/{id}/redeclare'.replace('{' + 'id' + '}', encodeURIComponent(String(id)));
        const { headers, timeout, responseType } = options;
        let localVarHeaderParams = Object.assign({}, headers ? headers : {});
        if (customs_declaration_redeclare_request === null || customs_declaration_redeclare_request === undefined) {
            throw new Error('Required parameter customs_declaration_redeclare_request was null or undefined when calling redeclareCustomsDeclaration.');
        }
        const data = await apiClient_1.apiClient.post(localVarPath, {
            headers: localVarHeaderParams,
            timeout,
            responseType,
        }, customs_declaration_redeclare_request);
        const typeName = paymentAcceptanceCustomsDeclaration_1.PaymentAcceptanceCustomsDeclaration.discriminator;
        return (0, dataParser_1.parseDataToType)(data, typeName);
    }
    async retrieveCustomsDeclaration(id, options = {}) {
        if (id === null || id === undefined) {
            throw new Error('Required parameter id was null or undefined when calling retrieveCustomsDeclaration.');
        }
        const localVarPath = '/api/v1/pa/customs_declarations/{id}'.replace('{' + 'id' + '}', encodeURIComponent(String(id)));
        const { headers, timeout, responseType } = options;
        let localVarHeaderParams = Object.assign({}, headers ? headers : {});
        const data = await apiClient_1.apiClient.get(localVarPath, {
            headers: localVarHeaderParams,
            timeout,
            responseType,
        });
        const typeName = paymentAcceptanceCustomsDeclaration_1.PaymentAcceptanceCustomsDeclaration.discriminator;
        return (0, dataParser_1.parseDataToType)(data, typeName);
    }
    async updateCustomsDeclaration(id, customs_declaration_update_request, options = {}) {
        if (id === null || id === undefined) {
            throw new Error('Required parameter id was null or undefined when calling updateCustomsDeclaration.');
        }
        const localVarPath = '/api/v1/pa/customs_declarations/{id}/update'.replace('{' + 'id' + '}', encodeURIComponent(String(id)));
        const { headers, timeout, responseType } = options;
        let localVarHeaderParams = Object.assign({}, headers ? headers : {});
        if (customs_declaration_update_request === null || customs_declaration_update_request === undefined) {
            throw new Error('Required parameter customs_declaration_update_request was null or undefined when calling updateCustomsDeclaration.');
        }
        const data = await apiClient_1.apiClient.post(localVarPath, {
            headers: localVarHeaderParams,
            timeout,
            responseType,
        }, customs_declaration_update_request);
        const typeName = paymentAcceptanceCustomsDeclaration_1.PaymentAcceptanceCustomsDeclaration.discriminator;
        return (0, dataParser_1.parseDataToType)(data, typeName);
    }
}
exports.PaymentAcceptanceCustomsDeclarationsApi = PaymentAcceptanceCustomsDeclarationsApi;
//# sourceMappingURL=paymentAcceptanceCustomsDeclarationsApi.js.map