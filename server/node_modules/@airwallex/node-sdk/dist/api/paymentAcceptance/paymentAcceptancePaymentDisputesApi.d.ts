import { CustomRequestOptions } from '../../common/request';
import { PaymentAcceptanceAcceptDisputeRequestRaw } from '../../model/paymentAcceptanceAcceptDisputeRequestRaw';
import { PaymentAcceptanceChallengeDisputeRequestRaw } from '../../model/paymentAcceptanceChallengeDisputeRequestRaw';
import { PaymentAcceptancePageResponseDTOOfPaymentAcceptancePaymentDispute } from '../../model/paymentAcceptancePageResponseDTOOfPaymentAcceptancePaymentDispute';
import { PaymentAcceptancePageResponseDTOOfPaymentAcceptanceRelatedOrder } from '../../model/paymentAcceptancePageResponseDTOOfPaymentAcceptanceRelatedOrder';
import { PaymentAcceptancePaymentDispute } from '../../model/paymentAcceptancePaymentDispute';
export interface ParamsPaymentAcceptancePaymentDisputesApigetDisputes {
    customer_id?: string;
    customer_name?: string;
    from_due_at?: Date;
    from_updated_at?: Date;
    merchant_order_id?: string;
    page?: string;
    payment_intent_id?: string;
    payment_method_type?: string;
    reason_code?: string;
    size?: number;
    stage?: string;
    status?: string;
    to_due_at?: Date;
    to_updated_at?: Date;
    transaction_type?: string;
}
export interface ParamsPaymentAcceptancePaymentDisputesApigetRelatedPaymentIntents {
    page?: string;
    page_size?: number;
}
export declare class PaymentAcceptancePaymentDisputesApi {
    acceptDispute(id: string, request: PaymentAcceptanceAcceptDisputeRequestRaw, options?: CustomRequestOptions): Promise<PaymentAcceptancePaymentDispute>;
    challengeDispute(id: string, request: PaymentAcceptanceChallengeDisputeRequestRaw, options?: CustomRequestOptions): Promise<PaymentAcceptancePaymentDispute>;
    getDispute(id: string, options?: CustomRequestOptions): Promise<PaymentAcceptancePaymentDispute>;
    getDisputes({ customer_id, customer_name, from_due_at, from_updated_at, merchant_order_id, page, payment_intent_id, payment_method_type, reason_code, size, stage, status, to_due_at, to_updated_at, transaction_type }: ParamsPaymentAcceptancePaymentDisputesApigetDisputes, options?: CustomRequestOptions): Promise<PaymentAcceptancePageResponseDTOOfPaymentAcceptancePaymentDispute>;
    getRelatedPaymentIntents(id: string, { page, page_size }: ParamsPaymentAcceptancePaymentDisputesApigetRelatedPaymentIntents, options?: CustomRequestOptions): Promise<PaymentAcceptancePageResponseDTOOfPaymentAcceptanceRelatedOrder>;
}
//# sourceMappingURL=paymentAcceptancePaymentDisputesApi.d.ts.map