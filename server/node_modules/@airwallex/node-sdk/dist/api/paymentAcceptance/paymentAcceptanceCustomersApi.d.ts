import { CustomRequestOptions } from '../../common/request';
import { PaymentAcceptanceCustomer } from '../../model/paymentAcceptanceCustomer';
import { PaymentAcceptanceCustomerClientSecret } from '../../model/paymentAcceptanceCustomerClientSecret';
import { PaymentAcceptanceCustomerCreateRequestRaw } from '../../model/paymentAcceptanceCustomerCreateRequestRaw';
import { PaymentAcceptanceCustomerUpdateRequestRaw } from '../../model/paymentAcceptanceCustomerUpdateRequestRaw';
import { PaymentAcceptanceListResponseOfPaymentAcceptanceCustomer } from '../../model/paymentAcceptanceListResponseOfPaymentAcceptanceCustomer';
export interface ParamsPaymentAcceptanceCustomersApilistCustomers {
    from_created_at?: string;
    merchant_customer_id?: string;
    page_num?: number;
    page_size?: number;
    to_created_at?: string;
}
export declare class PaymentAcceptanceCustomersApi {
    createCustomer(customer_create_request: PaymentAcceptanceCustomerCreateRequestRaw, options?: CustomRequestOptions): Promise<PaymentAcceptanceCustomer>;
    generateCustomerClientSecret(id: string, options?: CustomRequestOptions): Promise<PaymentAcceptanceCustomerClientSecret>;
    listCustomers({ from_created_at, merchant_customer_id, page_num, page_size, to_created_at }: ParamsPaymentAcceptanceCustomersApilistCustomers, options?: CustomRequestOptions): Promise<PaymentAcceptanceListResponseOfPaymentAcceptanceCustomer>;
    retrieveCustomer(id: string, options?: CustomRequestOptions): Promise<PaymentAcceptanceCustomer>;
    updateCustomer(id: string, customer_update_request: PaymentAcceptanceCustomerUpdateRequestRaw, options?: CustomRequestOptions): Promise<PaymentAcceptanceCustomer>;
}
//# sourceMappingURL=paymentAcceptanceCustomersApi.d.ts.map