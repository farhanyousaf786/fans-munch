"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentAcceptanceFundsSplitReversalsApi = void 0;
const apiClient_1 = require("../../client/apiClient");
const dataParser_1 = require("../../utils/dataParser");
const paymentAcceptanceFundsSplitReversal_1 = require("../../model/paymentAcceptanceFundsSplitReversal");
const paymentAcceptanceListResponseOfPaymentAcceptanceFundsSplitReversal_1 = require("../../model/paymentAcceptanceListResponseOfPaymentAcceptanceFundsSplitReversal");
class PaymentAcceptanceFundsSplitReversalsApi {
    async create(funds_split_reversal_create_request, x_on_behalf_of, options = {}) {
        const localVarPath = '/api/v1/pa/funds_split_reversals/create';
        const { headers, timeout, responseType } = options;
        let localVarHeaderParams = Object.assign({}, headers ? headers : {});
        if (funds_split_reversal_create_request === null || funds_split_reversal_create_request === undefined) {
            throw new Error('Required parameter funds_split_reversal_create_request was null or undefined when calling create.');
        }
        localVarHeaderParams['x-on-behalf-of'] = x_on_behalf_of;
        const data = await apiClient_1.apiClient.post(localVarPath, {
            headers: localVarHeaderParams,
            timeout,
            responseType,
        }, funds_split_reversal_create_request);
        const typeName = paymentAcceptanceFundsSplitReversal_1.PaymentAcceptanceFundsSplitReversal.discriminator;
        return (0, dataParser_1.parseDataToType)(data, typeName);
    }
    async list({ funds_split_id, page_num, page_size }, options = {}) {
        const localVarPath = '/api/v1/pa/funds_split_reversals';
        const { headers, timeout, responseType } = options;
        let localVarHeaderParams = Object.assign({}, headers ? headers : {});
        let queryParams = {};
        if (funds_split_id !== undefined) {
            queryParams['funds_split_id'] = funds_split_id;
        }
        if (page_num !== undefined) {
            queryParams['page_num'] = page_num;
        }
        if (page_size !== undefined) {
            queryParams['page_size'] = page_size;
        }
        const data = await apiClient_1.apiClient.get(localVarPath, {
            headers: localVarHeaderParams,
            params: queryParams,
            timeout,
            responseType,
        });
        const typeName = paymentAcceptanceListResponseOfPaymentAcceptanceFundsSplitReversal_1.PaymentAcceptanceListResponseOfPaymentAcceptanceFundsSplitReversal.discriminator;
        return (0, dataParser_1.parseDataToType)(data, typeName);
    }
    async retrieveFundsSplitReversal(id, options = {}) {
        if (id === null || id === undefined) {
            throw new Error('Required parameter id was null or undefined when calling retrieveFundsSplitReversal.');
        }
        const localVarPath = '/api/v1/pa/funds_split_reversals/{id}'.replace('{' + 'id' + '}', encodeURIComponent(String(id)));
        const { headers, timeout, responseType } = options;
        let localVarHeaderParams = Object.assign({}, headers ? headers : {});
        const data = await apiClient_1.apiClient.get(localVarPath, {
            headers: localVarHeaderParams,
            timeout,
            responseType,
        });
        const typeName = paymentAcceptanceFundsSplitReversal_1.PaymentAcceptanceFundsSplitReversal.discriminator;
        return (0, dataParser_1.parseDataToType)(data, typeName);
    }
}
exports.PaymentAcceptanceFundsSplitReversalsApi = PaymentAcceptanceFundsSplitReversalsApi;
//# sourceMappingURL=paymentAcceptanceFundsSplitReversalsApi.js.map