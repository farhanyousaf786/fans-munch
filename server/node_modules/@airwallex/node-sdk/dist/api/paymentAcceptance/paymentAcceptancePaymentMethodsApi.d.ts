import { CustomRequestOptions } from '../../common/request';
import { PaymentAcceptanceListResponseOfPaymentAcceptancePaymentMethod } from '../../model/paymentAcceptanceListResponseOfPaymentAcceptancePaymentMethod';
import { PaymentAcceptancePaymentMethod } from '../../model/paymentAcceptancePaymentMethod';
import { PaymentAcceptancePaymentMethodCreateRequestRaw } from '../../model/paymentAcceptancePaymentMethodCreateRequestRaw';
import { PaymentAcceptancePaymentMethodDisableRequestRaw } from '../../model/paymentAcceptancePaymentMethodDisableRequestRaw';
import { PaymentAcceptancePaymentMethodUpdateRequestRaw } from '../../model/paymentAcceptancePaymentMethodUpdateRequestRaw';
export interface ParamsPaymentAcceptancePaymentMethodsApilistPaymentMethods {
    customer_id?: string;
    from_created_at?: string;
    page_num?: number;
    page_size?: number;
    status?: string;
    to_created_at?: string;
    type?: string;
}
export declare class PaymentAcceptancePaymentMethodsApi {
    createPaymentMethod(payment_method_create_request: PaymentAcceptancePaymentMethodCreateRequestRaw, options?: CustomRequestOptions): Promise<PaymentAcceptancePaymentMethod>;
    disablePaymentMethod(id: string, payment_method_disable_request: PaymentAcceptancePaymentMethodDisableRequestRaw, options?: CustomRequestOptions): Promise<PaymentAcceptancePaymentMethod>;
    listPaymentMethods({ customer_id, from_created_at, page_num, page_size, status, to_created_at, type }: ParamsPaymentAcceptancePaymentMethodsApilistPaymentMethods, options?: CustomRequestOptions): Promise<PaymentAcceptanceListResponseOfPaymentAcceptancePaymentMethod>;
    retrievePaymentMethod(id: string, options?: CustomRequestOptions): Promise<PaymentAcceptancePaymentMethod>;
    updatePaymentMethod(id: string, payment_method_update_request: PaymentAcceptancePaymentMethodUpdateRequestRaw, options?: CustomRequestOptions): Promise<PaymentAcceptancePaymentMethod>;
}
//# sourceMappingURL=paymentAcceptancePaymentMethodsApi.d.ts.map